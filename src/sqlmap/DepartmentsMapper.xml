<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DepartmentsMapper">
  <resultMap id="BaseResultMap" type="model.Departments">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="department_manager_id" jdbcType="INTEGER" property="departmentManagerId" />
    <result column="department_is_active" jdbcType="BIT" property="departmentIsActive" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    department_id, department_name, department_manager_id, department_is_active
  </sql>
  <select id="selectByExample" parameterType="model.DepartmentsExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from departments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from departments
    where department_id = #{departmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from departments
    where department_id = #{departmentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.DepartmentsExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from departments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Departments">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into departments (department_id, department_name, department_manager_id, 
      department_is_active)
    values (#{departmentId,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, #{departmentManagerId,jdbcType=INTEGER}, 
      #{departmentIsActive,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="model.Departments">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into departments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="departmentManagerId != null">
        department_manager_id,
      </if>
      <if test="departmentIsActive != null">
        department_is_active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentManagerId != null">
        #{departmentManagerId,jdbcType=INTEGER},
      </if>
      <if test="departmentIsActive != null">
        #{departmentIsActive,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.DepartmentsExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from departments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update departments
    <set>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentManagerId != null">
        department_manager_id = #{record.departmentManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentIsActive != null">
        department_is_active = #{record.departmentIsActive,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update departments
    set department_id = #{record.departmentId,jdbcType=INTEGER},
      department_name = #{record.departmentName,jdbcType=VARCHAR},
      department_manager_id = #{record.departmentManagerId,jdbcType=INTEGER},
      department_is_active = #{record.departmentIsActive,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Departments">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update departments
    <set>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentManagerId != null">
        department_manager_id = #{departmentManagerId,jdbcType=INTEGER},
      </if>
      <if test="departmentIsActive != null">
        department_is_active = #{departmentIsActive,jdbcType=BIT},
      </if>
    </set>
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Departments">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update departments
    set department_name = #{departmentName,jdbcType=VARCHAR},
      department_manager_id = #{departmentManagerId,jdbcType=INTEGER},
      department_is_active = #{departmentIsActive,jdbcType=BIT}
    where department_id = #{departmentId,jdbcType=INTEGER}
  </update>
</mapper>